package com.example.mymod.common.commands;

import com.example.mymod.MyModMain;
import net.minecraft.command.CommandException;
import net.minecraft.command.ICommand;
import net.minecraft.command.ICommandSender;
import net.minecraft.server.MinecraftServer;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

import javax.annotation.Nullable;
import java.util.ArrayList;
import java.util.List;

public class UnanchorCommand implements ICommand {

    @Override
    public String getName() {
        return "Unanchor";
    }

    @Override
    public String getUsage(ICommandSender sender) {
        return "/UnanchorChunk";
    }

    @Override
    public List<String> getAliases() {
        return new ArrayList<>();
    }

    @Override
    public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException {
        World world = sender.getEntityWorld();
        BlockPos pos = sender.getPosition();

        // Unanchor the chunk every 30 seconds
        world.getChunkFromBlockCoords(pos).setAnchored(false);
        MyModMain.LOGGER.info("Unanchored chunk at {}", pos);

        // Schedule the next unanchor event in 30 seconds
        world.getGameRules().setOrCreateGameRule("doDaylightCycle", "false");
        world.getGameRules().setOrCreateGameRule("randomTickSpeed", "0");
        world.getGameRules().setOrCreateGameRule("keepInventory", "true");
        server.getScheduler().scheduleSyncDelayedTask(MyModMain.instance, this::unanchorChunk, 600);
    }

    private void unanchorChunk() {
        // Unanchor the chunk every 30 seconds
        World world = MinecraftServer.getServer().getEntityWorld();
        BlockPos pos = MinecraftServer.getServer().getPlayerList().getPlayers().get(0).getPosition();
        world.getChunkFromBlockCoords(pos).setAnchored(false);
        MyModMain.LOGGER.info("Unanchored chunk at {}", pos);

        // Schedule the next unanchor event in 30 seconds
        MinecraftServer.getServer().getScheduler().scheduleSyncDelayedTask(MyModMain.instance, this::unanchorChunk, 600);
    }

    @Override
    public boolean checkPermission(MinecraftServer server, ICommandSender sender) {
        return true;
    }

    @Override
    public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args, @Nullable BlockPos targetPos) {
        return new ArrayList<>();
    }

    @Override
    public boolean isUsernameIndex(String[] args, int index) {
        return false;
    }
}